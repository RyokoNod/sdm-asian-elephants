not_cancelled %>%
group_by(year, month, day) %>%
mutate(r = min_rank(desc(dep_time))) %>%
filter(r %in% range(r))
not_cancelled %>%
group_by(dest) %>%
summarise(carriers = n_distinct(carrier)) %>%
arrange(desc(carriers))
not_cancelled %>%
count(dest)
not_cancelled %>%
count(tailnum, wt = distance)
not_cancelled %>%
group_by(year, month, day) %>%
summarise(n_early = sum(dep_time < 500))
not_cancelled %>%
group_by(year, month, day) %>%
summarise(hour_prop = mean(arr_delay > 60))
daily <- group_by(flights, year, month, day)
(per_day   <- summarise(daily, flights = n()))
(per_month <- summarise(per_day, flights = sum(flights)))
(per_year  <- summarise(per_month, flights = sum(flights)))
daily %>%
ungroup() %>%             # no longer grouped by date
summarise(flights = n())  # all flights
daily
?flights
by_flight <- group_by(flights, flight)
by_flight
summarize(by_flight, count=n(), late_15 = mean(arr_delay>=15), early_15 = mean(arr_delay=<15))
summarize(by_flight, count=n(), late_15 = mean(arr_delay>=15), early_15 = mean(arr_delay<=15))
summarize(by_flight, count=n(), late_15 = mean(arr_delay>=15), early_15 = mean(arr_delay<=15), na.rm=TRUE)
summarize(by_flight, count=n(), late_15 = mean(arr_delay>=15,na.rm=TRUE), early_15 = mean(arr_delay<=15, na.rm=TRUE))
summarize(by_flight, count=n(), late_15 = mean(arr_delay>=15,na.rm=TRUE), early_15 = mean(arr_delay<=-15, na.rm=TRUE))
library(nycflights13)
library(tidyverse)
flights
delays <- select(flights, flight, dep_delay, arr_delay)
delats
delays
delays <- groupby(delays, flight)
delays <- group_by(delays, flight)
delays
summarize(delays, dep_delay_10min <- mean(dep_delay >= 10))
summarize(delays, dep_delay_10min <- mean(dep_delay >= 10, na.rm=TRUE))
summarize(delays, dep_delay_10min = mean(dep_delay >= 10, na.rm=TRUE), arr_delay_10min = mean(arr_delay >= 10, na.rm=TRUE))
delays %>% mutate(arr_delay_30 = mean(arr_delay >= 30, na.rm=TRUE), arr_early_30 = mean(arr_delat <= -30, na.rm=TRUE))
delays %>% mutate(arr_delay_30 = mean(arr_delay >= 30, na.rm=TRUE), arr_early_30 = mean(arr_delay <= -30, na.rm=TRUE))
delays %>% mutate(on_time=mean(arr_delay<=0))
delays %>% mutate(on_time=mean(arr_delay<=0,na.rm=TRUE))
delays %>% mutate(on_time=mean(dep_delay<=0,na.rm=TRUE))
delays %>% mutate(on_time=mean(dep_delay<=0,na.rm=TRUE),2hrs_late=mean(dep_delay>=120.na.rm=TRUE))
delays %>% mutate(on_time=mean(dep_delay<=0,na.rm=TRUE),2hrs_late=mean(dep_delay>=120,na.rm=TRUE))
delays %>% mutate(on_time=mean(dep_delay<=0,na.rm=TRUE),twohrs_late=mean(dep_delay>=120,na.rm=TRUE))
not_cancelled <- flights %>%
filter(!is.na(dep_delay), !is.na(arr_delay))
not_cancelled %>% count(dest)
not_cancelled
mutate(not_cancelled, dest, n=n(dest))
mutate(not_cancelled, dest, count=n(dest))
mutate(not_cancelled, count=n(dest))
mutate(not_cancelled, n_distinct(carrier))
summarize(not_cancelled, n_distinct(carrier))
not_cancelled %>% group_by(dest) %>% summarise(count = n(dest))
not_cancelled %>% group_by(dest) %>% summarise(n(dest))
not_cancelled %>% group_by(dest)
not_cancelled$dest
not_cancelled %>% group_by(dest)
not_cancelled %>% group_by(dest) %>% mean(dep_delay, na.rm=TRUE)
not_cancelled %>% group_by(dest) %>% summarize(mean(dep_delay, na.rm=TRUE))
not_cancelled %>% summarize(n(dest))
not_cancelled %>% group_by(dest) %>% n()
not_cancelled group_by(dest) %>%
filter(n() > 365)
not_cancelled %>% group_by(dest) %>%
filter(n() > 365)
not_cancelled %>% group_by(dest) %>% summarize(n())
not_cancelled %>% group_by(dest) %>% summarize(n=n())
not_cancelled %>% count(dest)
not_cancelled %>% count(tailnum, wt = distance)
not_cancelled %>% group_by(tailnum) %>% summarize(n=sum())
not_cancelled %>% group_by(tailnum) %>% summarize(n=sum(distance))
not_cancelled %>% group_by(tailnum) %>% summarize(n=sum())
not_cancelled %>% group_by(tailnum) %>% summarize(n=sum(distance))
not_cancelled %>% count(tailnum, wt = distance)
filter(flights, is.na(dep_delay))
filter(flights, is.na(arr_delay))
filter(flights, is.na(dep_delay) | is.na(arr_delay))
filter(flights, !is.na(dep_delay) | is.na(arr_delay))
filter(flights, !is.na(dep_delay) & is.na(arr_delay))
delay_inspection <- filter(flights, !is.na(dep_delay) & is.na(arr_delay))
View(delay_inspection)
View(delay_inspection)
delay_inspection2 <- filter(flights, is.na(dep_delay) & !is.na(arr_delay))
View(delay_inspection2)
delay_inspection3 <- filter(flights, is.na(air_time))
View(delay_inspection3)
View(delay_inspection3)
delay_inspection == delay_inspection3
filter(flights, is.na(arr_delay)) == delay_inspection3
all(filter(flights, is.na(arr_delay)) == delay_inspection3)
identical(filter(flights, is.na(arr_delay)),delay_inspection3)
flights %>% groupby(year,month,day) %>%
filter(flights, is.na(arr_delay) %>%
summarize(n())
)
flights %>% groupby(year,month,day) %>%
filter(flights, is.na(arr_delay)) %>%
summarize(n())
> flights %>% group?by(year,month,day) %>%
+ filter(flights, is.na(arr_delay)) %>%
+ summarize(n())
> flights %>% group_by(year,month,day) %>%
+ filter(flights, is.na(arr_delay)) %>%
+ summarize(n())
flights %>% group?by(year,month,day) %>%
+ filter(flights, is.na(arr_delay)) %>%
+ summarize(n())
flights %>% group_by(year,month,day) %>%
+ filter(flights, is.na(arr_delay)) %>%
+ summarize(n())
flights %>% group_by(year,month,day) %>%
filter(is.na(arr_delay)) %>%
summarize(n())
> flights %>% group_by(year,month,day) %>%
filter(is.na(arr_delay)) %>%
summarize(n()) %>%
_
flights %>% group_by(year,month,day) %>% filter(is.na(arr_delay)) %>% summarize(n()) %>%
ggplot(mapping = aes(x = n())) + geom_line()
flights %>% group_by(year,month,day) %>% filter(is.na(arr_delay)) %>% summarize(n=n()) %>%
ggplot(mapping = aes(x = n) + geom_line()
)
flights %>% group_by(year,month,day) %>% filter(is.na(arr_delay)) %>% summarize(n=n()) %>% ggplot(mapping = aes(x = n)) + geom_line()
flights %>% group_by(year,month,day) %>% filter(is.na(arr_delay)) %>% summarize(n=n()) %>% ggplot(mapping = aes(y = n)) + geom_line()
flights %>% group_by(year,month,day) %>% filter(is.na(arr_delay)) %>% summarize(n=n()) %>% ggplot(mapping = aes(x=day,y = n)) + geom_line()
cancelled <- flights %>% group_by(year,month,day) %>% filter(is.na(arr_delay)) %>% summarize(count=n())
cancelled
cancelled$date <- paste(cancelled$year,cancelled$month,cancelled$day, sep="_")
cancelled
ggplot(cancelled) + geom_line(mapping=aes(x=date, y=count))
cancelled %>% ungroup() %>% ggplot() + geom_line(mapping=aes(x=date, y=count))
ggplot(cancelled) + geom_line(mapping=aes(x=date, y=count,group01))
ggplot(cancelled) + geom_line(mapping=aes(x=date, y=count,group=1))
flights %>% group_by(year,month,day) %>% summarise(mean_arr_delay=mean(arr_delay, ma.rm=TRUE))
flights %>% group_by(year,month,day) %>% summarise(mean_arr_delay=mean(arr_delay, na.rm=TRUE))
flights %>% group_by(year,month,day) %>% summarise(mean_arr_delay=mean(arr_delay, na.rm=TRUE), cancelled=sum(is.na(arr_delay)))
filter(flights, year==2013, month==1, day==9, is.na(arr_delay))
filter(flights, year==2013, month==1, day==9, is.na(arr_delay))$arr_delay
filter(flights, year==2013, month==1, day==9)$arr_delay
mean(filter(flights, year==2013, month==1, day==9)$arr_delay)
mean(filter(flights, year==2013, month==1, day==9)$arr_delay, na.rm=TRUE)
flights %>% group_by(year,month,day) %>% summarise(mean_arr_delay=mean(arr_delay, na.rm=TRUE), cancelled=sum(is.na(arr_delay)))
cancelled <- flights %>% group_by(year,month,day) %>% summarise(mean_arr_delay=mean(arr_delay, na.rm=TRUE), cancelled=sum(is.na(arr_delay)))
cancelled$date <- paste(cancelled$year,cancelled$month,cancelled$day, sep="_")
cancelled
ggplot(cancelled) + geom_line(mapping=aes(x=date, y))
ggplot(cancelled) + geom_line(mapping=aes(x=date, y=mean_arr_delay, group=1))
ggplot(cancelled) + geom_line(mapping=aes(x=date, y=mean_arr_delay, group=1)) + geom_line(mapping=aes(x=date, y=cancelled, group=1))
ggplot(cancelled) + geom_line(mapping=aes(x=date, y=mean_arr_delay, group=1)) + geom_line(mapping=aes(x=date, y=cancelled, group=1),color="blue")
library(nycflights13)
library(tidyverse)
flights %>% group_by(carrier, dest) %>% summarise(n())
?flights
flights %>% group_by(carrier) %>% summarize(mean(dep_delay, na.rm = TRUE)0
flights %>% group_by(carrier) %>% summarize(mean(dep_delay, na.rm = TRUE))
flights %>% group_by(carrier) %>% summarize(mean(dep_delay, na.rm = TRUE)) %>% arrange()
flights %>% group_by(carrier) %>% summarize(mean(dep_delay, na.rm = TRUE)) %>% arrange(mean(dep_delay, na.rm = TRUE))
flights %>% group_by(carrier) %>% summarize(mean(dep_delay, na.rm = TRUE)) %>% arrange()
flights %>% group_by(carrier) %>% summarize(mean(dep_delay, na.rm = TRUE)) %>% arrange(2)
flights %>% group_by(carrier) %>% summarize(mean(dep_delay, na.rm = TRUE))
flights %>% group_by(carrier) %>% summarize(mean(dep_delay, na.rm = TRUE)) %>% rename(`mean(dep_delay, na.rm = TRUE)`, avg_delay)
flights %>% group_by(carrier) %>% summarize(mean(dep_delay, na.rm = TRUE)) %>% rename(`mean(dep_delay, na.rm = TRUE)`=avg_delay)
flights %>% group_by(carrier) %>% summarize(mean(dep_delay, na.rm = TRUE)) %>% rename(avg_delay=`mean(dep_delay, na.rm = TRUE)`)
flights %>% group_by(carrier) %>% summarize(mean(dep_delay, na.rm = TRUE)) %>% rename(avg_delay=`mean(dep_delay, na.rm = TRUE)`) %>% arrange(avg_delay)
delays_by_carrier <- flights %>% group_by(carrier) %>% summarize(mean(dep_delay, na.rm = TRUE)) %>% rename(avg_delay=`mean(dep_delay, na.rm = TRUE)`) %>% arrange(avg_delay)
flights %>% group_by(carrier, dest) %>% summarise(n())
flights %>% group_by(carrier, dest) %>% summarise(n()) %>% filter(carrier %in% c("WN", "FL", "YV", "EV", "F9"))
flights %>% group_by(carrier, dest) %>% summarise(n()) %>% filter(carrier %in% c("WN", "FL", "YV", "EV", "F9")) %>% ggplot(mapping =aes(x=dest, y=`n()`,group=carrier)) + geom_bar()
flights %>% group_by(carrier, dest) %>% summarise(n()) %>% filter(carrier %in% c("WN", "FL", "YV", "EV", "F9")) %>% ggplot(mapping =aes(x=dest, y=`n()`)) + geom_bar()
flights %>% group_by(carrier, dest) %>% summarise(n()) %>% filter(carrier %in% c("WN", "FL", "YV", "EV", "F9")) %>% ggplot(mapping =aes(x=dest, y=`n()`,group=carrier),stat="identity") + geom_bar()
flights %>% group_by(carrier, dest) %>% summarise(n()) %>% filter(carrier %in% c("WN", "FL", "YV", "EV", "F9")) %>% ggplot(mapping =aes(x=dest, y=`n()`),stat="identity") + geom_bar()
flights %>% group_by(carrier, dest) %>% summarise(n()) %>% filter(carrier %in% c("WN", "FL", "YV", "EV", "F9")) %>% ggplot(mapping =aes(x=dest, y=`n()`)) + geom_bar(stat="identity"])
flights %>% group_by(carrier, dest) %>% summarise(n()) %>% filter(carrier %in% c("WN", "FL", "YV", "EV", "F9")) %>% ggplot(mapping =aes(x=dest, y=`n()`)) + geom_bar(stat="identity")
flights %>% group_by(carrier, dest) %>% summarise(n()) %>% filter(carrier %in% c("WN", "FL", "YV", "EV", "F9")) %>% ggplot(mapping =aes(x=dest, y=`n()`,group=carrier)) + geom_bar(stat="identity")
flights %>% group_by(carrier, dest) %>% summarise(n()) %>% filter(carrier %in% c("WN", "FL", "YV", "EV", "F9")) %>% ggplot(mapping =aes(x=dest, y=`n()`,group=carrier)) + geom_bar(stat="identity",position="dodge")
flights %>% group_by(carrier, dest) %>% summarise(n()) %>% filter(carrier %in% c("F9")) %>% ggplot(mapping =aes(x=dest, y=`n()`,group=carrier)) + geom_bar(stat="identity",position="dodge")
flights %>% group_by(carrier, dest) %>% summarise(n()) %>% filter(carrier %in% c("F9"))
View(delays_by_carrier)
View(delays_by_carrier)
flights %>% group_by(carrier, dest) %>% summarise(n()) %>% filter(carrier %in% c("F9","EV"))
flights %>% group_by(carrier, dest) %>% summarise(n()) %>% filter(carrier %in% c("F9","EV")) %>% ggplot(mapping =aes(x=dest, y=`n()`,group=carrier)) + geom_bar(stat="identity",position="dodge")
flights %>% group_by(carrier, dest) %>% summarise(n()) %>% filter(carrier %in% c("F9","EV")) %>% ggplot(mapping =aes(x=carrier, y=`n()`,group=dest)) + geom_bar(stat="identity",position="dodge")
flights %>% group_by(carrier, dest) %>% summarise(n()) %>% filter(carrier %in% c("EV"))
flights %>% group_by(carrier, dest) %>% summarise(n()) %>% filter(carrier %in% c("EV")) %>% ggplot(mapping =aes(x=dest, y=`n()`)) + geom_bar(stat="identity",position="dodge")
flights %>% group_by(carrier, dest) %>% summarise(n()) %>% filter(carrier %in% c("EV") & `n()`>1500) %>% ggplot(mapping =aes(x=dest, y=`n()`)) + geom_bar(stat="identity",position="dodge")
flights %>% group_by(carrier, dest) %>% summarise(n()) %>% filter(carrier %in% c("F9") & `n()`>1500) %>% ggplot(mapping =aes(x=dest, y=`n()`)) + geom_bar(stat="identity",position="dodge")
flights %>% group_by(carrier, dest) %>% summarise(n()) %>% filter(carrier %in% c("F9"))
flights %>% group_by(carrier, dest) %>% summarise(n()) %>% filter(carrier %in% c("EV") & `n()`>1500) %>% ggplot(mapping =aes(x=dest, y=`n()`)) + geom_bar(stat="identity",position="dodge")
flights %>% group_by(carrier, dest) %>% summarise(n()) %>% filter(carrier %in% c("YV") & `n()`>1500) %>% ggplot(mapping =aes(x=dest, y=`n()`)) + geom_bar(stat="identity",position="dodge")
flights %>% group_by(carrier, dest) %>% summarise(n()) %>% filter(carrier %in% c("YV")) %>% ggplot(mapping =aes(x=dest, y=`n()`)) + geom_bar(stat="identity",position="dodge")
flights %>% group_by(carrier, dest) %>% summarise(n()) %>% filter(carrier %in% c("FL")) %>% ggplot(mapping =aes(x=dest, y=`n()`)) + geom_bar(stat="identity",position="dodge")
flights %>% group_by(carrier, dest) %>% summarise(n()) %>% filter(carrier %in% c("US")) %>% ggplot(mapping =aes(x=dest, y=`n()`)) + geom_bar(stat="identity",position="dodge")
flights %>% group_by(carrier, dest) %>% summarise(n()) %>% filter(carrier %in% c("HA")) %>% ggplot(mapping =aes(x=dest, y=`n()`)) + geom_bar(stat="identity",position="dodge")
flights %>% group_by(carrier, dest) %>% summarise(n()) %>% filter(carrier %in% c("AS")) %>% ggplot(mapping =aes(x=dest, y=`n()`)) + geom_bar(stat="identity",position="dodge")
?count
not_cancelled <- flights %>%
filter(!is.na(dep_delay), !is.na(arr_delay))
not_cancelled %>% count(dest)
not_cancelled %>% count(dest,sort=TRUE)
flights_sml <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time
)
flights_sml
flights_sml %>%
group_by(year, month, day) %>%
filter(rank(desc(arr_delay)) < 10)
test <- flights_sml %>%
group_by(year, month, day) %>%
filter(rank(desc(arr_delay)) < 10)
View(test)
View(test)
popular_dests <- flights %>%
group_by(dest) %>%
filter(n() > 365)
popular_dests
popular_dests %>%
filter(arr_delay > 0) %>%
mutate(prop_delay = arr_delay / sum(arr_delay)) %>%
select(year:day, dest, arr_delay, prop_delay)
vignette("window-functions")
library(nycflights13)
library(tidyverse)
flight
flights
flights %>% filter(dep_time > 500)
flights %>% filter(dep_time > 1700)
flights %>% filter(dep_time > 2300)
flights %>% filter(dep_time > 2330)
?flights
flights %>% filter(dep_delay==max(dep_delay))
max(flights$dep_delay)
flights %>% filter(dep_delay==max(dep_delay), na.rm==TRUE)
flights %>% filter(dep_delay==max(dep_delay), rm.na==TRUE)
flights %>% filter(dep_delay==max(dep_delay), na.rm=TRUE)
max(flights$dep_delay, na.rm=TURE)
max(flights$dep_delay, na.rm=TRUE)
flights %>% filter(dep_delay==max(dep_delay, na.rm=TRUE))
flights %>% group_by(tyear,month,day) %>%filter(dep_delay==max(dep_delay, na.rm=TRUE))
flights %>% group_by(year,month,day) %>%filter(dep_delay==max(dep_delay, na.rm=TRUE))
flights %>% mutate(max_delay=max(arr_delay, na.rm=TRUE))
flights_sml <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time
)
flights_sml %>% mutate(max_delay=max(arr_delay, na.rm=TRUE))
flights_sml %>% group_by(year,month,day) mutate(max_delay=max(arr_delay, na.rm=TRUE))
flights_sml %>% group_by(year,month,day) %>%mutate(max_delay=max(arr_delay, na.rm=TRUE))
flights %>% select(tailnum,ends_with("delay"))
flights %>% select(tailnum,ends_with("delay")) %>% mutate(max_dep_delay=max(dep_delay, na.rm=TRUE))
flights %>% select(tailnum,ends_with("delay")) group_by(tailnum) %>% mutate(max_dep_delay=max(dep_delay, na.rm=TRUE))
flights %>% select(tailnum,ends_with("delay")) %>%group_by(tailnum) %>% mutate(max_dep_delay=max(dep_delay, na.rm=TRUE))
flights %>% select(tailnum,ends_with("delay")) %>%group_by(tailnum)
flights %>% select(tailnum,ends_with("delay")) %>%group_by(tailnum) %>% mutate(max_dep_delay=max(dep_delay))
?select
flights %>% select(tailnum,ends_with("delay")) %>%group_by(tailnum) %>% summarize(max_dep_delay=max(dep_delay, na.rm=TRUE))
flights %>% select(tailnum,ends_with("delay")) %>%group_by(tailnum) %>% summarize(max_dep_delay=max(dep_delay))
flights %>% select(tailnum,ends_with("delay")) %>%group_by(tailnum) %>% summarize(max_dep_delay=max(dep_delay), max_arr_delay=max(arr_delay))
flights %>% select(tailnum,ends_with("delay")) %>%group_by(tailnum) %>% summarize(max_dep_delay=max(dep_delay), max_arr_delay=max(arr_delay)) %>% arrange(max_dep_delay)
flights %>% select(tailnum,ends_with("delay")) %>%group_by(tailnum) %>% summarize(max_dep_delay=max(dep_delay), max_arr_delay=max(arr_delay)) %>% arrange(desc(max_dep_delay))
flights %>% select(tailnum,ends_with("delay")) %>%group_by(tailnum) %>% summarize(max_dep_delay=max(dep_delay), max_arr_delay=max(arr_delay)) %>% arrange(desc(max_arr_delay))
?flights
flights %>% select(sched_dep_time,ends_with("delay"))
flights %>% select(sched_dep_time,ends_with("delay")) %>% mutate(hour_of_day=floor(sched_dep_time))
?round_any
flights %>% select(sched_dep_time,ends_with("delay")) %>% mutate(hour_of_day=(sched_dep_time %/% 100)*100)
flights %>% select(sched_dep_time,ends_with("delay")) %>% mutate(hour_of_day=(sched_dep_time %/% 100)*100) %>% group_by(hour_of_day)
flights %>% select(sched_dep_time,ends_with("delay")) %>% mutate(hour_of_day=(sched_dep_time %/% 100)*100) %>% group_by(hour_of_day) %>% summarise(avg_dep_delay=mean(dep_delay,na.rm=TRUE))
flights %>% select(sched_dep_time,ends_with("delay")) %>% mutate(hour_of_day=(sched_dep_time %/% 100)*100) %>% group_by(hour_of_day) %>% summarise(avg_dep_delay=mean(dep_delay,na.rm=TRUE, avg_arr_delay=mean(arr_delay, na.rm=TRUE)))
flights %>% select(sched_dep_time,ends_with("delay")) %>% mutate(hour_of_day=(sched_dep_time %/% 100)*100) %>% group_by(hour_of_day) %>% summarise(avg_dep_delay=mean(dep_delay,na.rm=TRUE), avg_arr_delay=mean(arr_delay, na.rm=TRUE)))
flights %>% select(sched_dep_time,ends_with("delay")) %>% mutate(hour_of_day=(sched_dep_time %/% 100)*100) %>% group_by(hour_of_day) %>% summarise(avg_dep_delay=mean(dep_delay,na.rm=TRUE), avg_arr_delay=mean(arr_delay, na.rm=TRUE))
flights %>% select(flight, dest, ends_with("delay"))
flights %>% select(flight, dest, ends_with("delay")) %>% group_by(dest) %>% summarize(total_delay = sum(dep_delay))
flights %>% select(flight, dest, ends_with("delay")) %>% group_by(dest) %>% summarize(total_delay = sum(dep_delay, na.rm=TRUE))
flights %>% select(flight, dest, ends_with("delay")) %>% group_by(flight,dest) %>% summarize(total_delay = sum(dep_delay, na.rm=TRUE))
flights %>% select(year, month, day, flight, origin,dest, ends_with("delay"))
flights %>% select(year, month, day, flight, origin, ends_with("delay"))
flights %>% select(year, month, day, sched_dep_time,flight, origin, ends_with("delay"))
flights %>% select(year, month, day, sched_dep_time,flight, origin, dep_delay)
flights %>% select(year, month, day, sched_dep_time,flight, origin, dep_delay) %>% filter(year=2013,month=2,day=15)
flights %>% select(year, month, day, sched_dep_time,flight, origin, dep_delay) %>% filter(year==2013,month==2,day==15)
flights %>% select(year, month, day, hour ,flight, origin, dep_delay) %>% filter(year==2013,month==2,day==15) %group_by(dest)
flights %>% select(year, month, day, hour ,flight, origin, dep_delay) %>% filter(year==2013,month==2,day==15) %?% group_by(dest)
flights %>% select(year, month, day, hour ,flight, origin, dep_delay) %>% filter(year==2013,month==2,day==15) %>% group_by(dest)
flights %>% select(year, month, day, hour ,flight, origin, dep_delay) %>% filter(year==2013,month==2,day==15) %>% group_by(origin)
flights %>% select(year, month, day, hour ,flight, origin, dep_delay) %>% filter(year==2013,month==2,day==15) %>% group_by(origin) %>% mutate(lag_delay = lag(dep_delay))
flights %>% select(year, month, day, hour ,flight, origin, dep_delay) %>% filter(year==2013,month==2,day==15) %>% group_by(origin) %>% mutate(lag_delay = lag(dep_delay)) %>% arrange(origin)
flights %>% select(year, month, day, hour ,flight, origin, dep_delay) %>% filter(year==2013,month==2,day==15) %>% group_by(origin) %>% mutate(lag_delay = lag(dep_delay)) %>% arrange(origin) %>% filter(!is.na(lag_delay))
?cor
flights %>% select(year, month, day, hour ,flight, origin, dep_delay) %>% filter(year==2013,month==2,day==15) %>% group_by(origin) %>% mutate(lag_delay = lag(dep_delay)) %>% arrange(origin) %>% filter(!is.na(lag_delay)) %>%  summarize(cor = cor(dep_delay, lag_delay, use = "complete.obs"), n = n())
flights %>% select(year, month, day, hour ,flight, origin, dep_delay)  %>% group_by(origin) %>% mutate(lag_delay = lag(dep_delay)) %>% arrange(origin) %>% filter(!is.na(lag_delay)) %>%  summarize(cor = cor(dep_delay, lag_delay, use = "complete.obs"), n = n())
flights %>%
select(year, month, day, hour, dest, dep_delay) %>%
group_by(dest) %>%
mutate(lag_delay = lag(dep_delay)) %>%
arrange(dest) %>%
filter(!is.na(lag_delay)) %>%
summarize(cor = cor(dep_delay, lag_delay, use = "complete.obs"),
n = n()) %>%
arrange(desc(cor)) %>%
filter(row_number(desc(cor)) %in% 1:10)
setwd("~/Documents/aalto/Master Thesis/sdm-asian-elephants/codes/standard_linearGLM")
setwd("~/Documents/aalto/Master Thesis/sdm-asian-elephants/codes/bayesian_linearGLM")
library(caret)
library(brms)
library(MLmetrics)
library(dplyr)
library(formattable)
library(reliabilitydiag)
library(shinystan)
source("../utils.R")
options(mc.cores=parallel::detectCores())  # use all available cores
# settings
random_seed <- 12244 # set random seed
datafolder <- '../../data/Modeling_Data/'
resultfolder <- '../../data/Results/Bayesian_linearGLM/'
feature_type <- 'SGLM' # GLM for random CV feature set, SGLM for spatial CV feature set
normalize <-FALSE # TRUE if you want to normalize the data
adapt_d <- 0.99
treedepth <- 10
# specify file names for data
trainfile <- paste(datafolder,'traindata_',feature_type,'.csv',sep='')
testfile <- paste(datafolder,'testdata_',feature_type,'.csv',sep='')
pres_testfile <- paste(datafolder,'testdata_pres_',feature_type,'.csv',sep='') # present day climatic
# import the present-day climate variables with Asian elephant presence
traindata_master <- read.csv(trainfile, header=TRUE)
if (feature_type=="GLM"){
if (normalize==FALSE){
formula <-PA ~ 0 + Intercept + BIO03_Mean + TN10P_IDW1N10 +
GSL_IDW1N10 + TNX_IDW1N10 + ID_IDW1N10 + BIO14_Mean + BIO18_Mean +
CWD_IDW1N10 + RX1DAY_IDW1N10 + WSDI_IDW1N10
priors <- c(set_prior("normal(0,10)", class="b", coef="BIO03_Mean"),
set_prior("normal(0,10)", class="b", coef="TN10P_IDW1N10"),
set_prior("normal(0,10)", class="b", coef="GSL_IDW1N10"),
set_prior("normal(0,10)", class="b", coef="TNX_IDW1N10"),
set_prior("normal(0,10)", class="b", coef="ID_IDW1N10"),
set_prior("normal(0,10)", class="b", coef="BIO14_Mean"),
set_prior("normal(0,10)", class="b", coef="BIO18_Mean"),
set_prior("normal(0,10)", class="b", coef="CWD_IDW1N10"),
set_prior("normal(0,10)", class="b", coef="RX1DAY_IDW1N10"),
set_prior("normal(0,10)", class="b", coef="WSDI_IDW1N10"),
set_prior("normal(0,20)", class="b", coef="Intercept"))
}else{
formula <-PA ~ 0 + Intercept + BIO03_Mean + TN10P_IDW1N10 +
GSL_IDW1N10 + TNX_IDW1N10 + ID_IDW1N10 + BIO14_Mean + BIO18_Mean +
CWD_IDW1N10 + RX1DAY_IDW1N10 + WSDI_IDW1N10
priors <- c(set_prior("normal(0,10)", class="b", coef="BIO03_Mean"),
set_prior("normal(0,10)", class="b", coef="TN10P_IDW1N10"),
set_prior("normal(0,10)", class="b", coef="GSL_IDW1N10"),
set_prior("normal(0,10)", class="b", coef="TNX_IDW1N10"),
set_prior("normal(0,10)", class="b", coef="ID_IDW1N10"),
set_prior("normal(0,10)", class="b", coef="BIO14_Mean"),
set_prior("normal(0,10)", class="b", coef="BIO18_Mean"),
set_prior("normal(0,10)", class="b", coef="CWD_IDW1N10"),
set_prior("normal(0,10)", class="b", coef="RX1DAY_IDW1N10"),
set_prior("normal(0,10)", class="b", coef="WSDI_IDW1N10"),
set_prior("normal(0,20)", class="b", coef="Intercept"))
}
}else{
if (normalize==FALSE){
formula <- PA ~ 0 + Intercept + BIO08_Mean + TXX_IDW1N10 +
BIO02_Mean + TN90P_IDW1N10 + ID_IDW1N10 + BIO14_Mean + BIO18_Mean +
CWD_IDW1N10 + RX1DAY_IDW1N10 + WSDI_IDW1N10
priors <- c(set_prior("normal(0,5)", class="b", coef="BIO08_Mean"),
set_prior("normal(0,5)", class="b", coef="TXX_IDW1N10"),
set_prior("normal(0,5)", class="b", coef="BIO02_Mean"),
set_prior("normal(0,5)", class="b", coef="TN90P_IDW1N10"),
set_prior("normal(0,5)", class="b", coef="ID_IDW1N10"),
set_prior("normal(0,5)", class="b", coef="BIO14_Mean"),
set_prior("normal(0,5)", class="b", coef="BIO18_Mean"),
set_prior("normal(0,5)", class="b", coef="CWD_IDW1N10"),
set_prior("normal(0,5)", class="b", coef="RX1DAY_IDW1N10"),
set_prior("normal(0,5)", class="b", coef="WSDI_IDW1N10"),
set_prior("normal(0,10)", class="b", coef="Intercept"))
}else{
formula <- PA ~ 0 + Intercept + BIO08_Mean + TXX_IDW1N10 +
BIO02_Mean + TN90P_IDW1N10 + ID_IDW1N10 + BIO14_Mean + BIO18_Mean +
CWD_IDW1N10 + RX1DAY_IDW1N10 + WSDI_IDW1N10
priors <- c(set_prior("normal(0,10)", class="b", coef="BIO08_Mean"),
set_prior("normal(0,10)", class="b", coef="TXX_IDW1N10"),
set_prior("normal(0,10)", class="b", coef="BIO02_Mean"),
set_prior("normal(0,10)", class="b", coef="TN90P_IDW1N10"),
set_prior("normal(0,10)", class="b", coef="ID_IDW1N10"),
set_prior("normal(0,10)", class="b", coef="BIO14_Mean"),
set_prior("normal(0,10)", class="b", coef="BIO18_Mean"),
set_prior("normal(0,10)", class="b", coef="CWD_IDW1N10"),
set_prior("normal(0,10)", class="b", coef="RX1DAY_IDW1N10"),
set_prior("normal(0,10)", class="b", coef="WSDI_IDW1N10"),
set_prior("normal(0,20)", class="b", coef="Intercept"))
}
}
# separate the labels and features from the master training data
train_features <- subset(traindata_master, select=-c(HID, Folds, PA))
train_labels <- subset(traindata_master, select=c(PA))
# read present-day test data, separate features
pres_testdata <- read.csv(pres_testfile, header=TRUE)
pres_testfeatures <- subset(pres_testdata, select=-c(HID))
if (normalize==TRUE){
preProc <- preProcess(train_features, method=c("range"))
train_features <- predict(preProc, train_features)
pres_testfeatures <- predict(preProc, pres_testfeatures)
pres_testdata <- cbind(HID=pres_testdata$HID, pres_testfeatures) # put HID together again
}
# create model
blinGLM <- brm(formula=formula,
data=cbind(train_features, train_labels),
family=bernoulli(link="logit"),
prior=priors,
control = list(adapt_delta = adapt_d, max_treedepth = treedepth),
seed=random_seed
)
# save model so I can recover if R crashes
if (normalize==TRUE){
if (feature_type=="GLM"){
saveRDS(blinGLM, "bayeslinGLM_norm_randCVfeat_model.rds")
}
if (feature_type=="SGLM"){
saveRDS(blinGLM, "bayeslinGLM_norm_spatialCVfeat_model.rds")
}
} else{
if (feature_type=="GLM"){
saveRDS(blinGLM, "bayeslinGLM_randCVfeat_model.rds")
}
if (feature_type=="SGLM"){
saveRDS(blinGLM, "bayeslinGLM_spatialCVfeat_model.rds")
}
}
# load if R crashes
if (normalize==TRUE){
if (feature_type=="GLM"){
blinGLM <- readRDS("bayeslinGLM_norm_randCVfeat_model.rds")
}
if (feature_type=="SGLM"){
blinGLM <- readRDS("bayeslinGLM_norm_spatialCVfeat_model.rds")
}
} else {
if (feature_type=="GLM"){
blinGLM <- readRDS("bayeslinGLM_randCVfeat_model.rds")
}
if (feature_type=="SGLM"){
blinGLM <- readRDS("bayeslinGLM_spatialCVfeat_model.rds")
}
}
# predict and save to files
if (normalize==TRUE){
pres_preds_matrix <-  paste(resultfolder,'pres_preds_bayeslinGLM_',feature_type,'norm_seed', random_seed,
'.rds',sep='')
pres_preds_file <-  paste(resultfolder,'pres_preds_bayeslinGLM_',feature_type,'norm_seed', random_seed,
'.csv',sep='')
}else{
pres_preds_matrix <-  paste(resultfolder,'pres_preds_bayeslinGLM_',feature_type,'unnorm_seed', random_seed,
'.rds',sep='')
pres_preds_file <-  paste(resultfolder,'pres_preds_bayeslinGLM_',feature_type,'unnorm_seed', random_seed,
'.csv',sep='')
}
brmsGLM_testpred(blinGLM, pres_testdata, matrixpath=pres_preds_matrix, csvpath=pres_preds_file)
# separate the HIDs, labels, and the features from the master training data
train_features <- subset(traindata_master, select=-c(HID, Folds, PA))
train_labels <- subset(traindata_master, select=c(PA))
# read future test data, separate features and HID
testdata <- read.csv(testfile, header=TRUE)
testfeatures <- subset(testdata, select=-c(HID))
if (normalize==TRUE){
preProc <- preProcess(train_features, method=c("range"))
train_features <- predict(preProc, train_features)
testfeatures <- predict(preProc, testfeatures)
testdata <- cbind(HID=testdata$HID, testfeatures) # put HID together again
}
# load if R crashes
if (normalize==TRUE){
if (feature_type=="GLM"){
blinGLM <- readRDS("bayeslinGLM_norm_randCVfeat_model.rds")
}
if (feature_type=="SGLM"){
blinGLM <- readRDS("bayeslinGLM_norm_spatialCVfeat_model.rds")
}
} else {
if (feature_type=="GLM"){
blinGLM <- readRDS("bayeslinGLM_randCVfeat_model.rds")
}
if (feature_type=="SGLM"){
blinGLM <- readRDS("bayeslinGLM_spatialCVfeat_model.rds")
}
}
# predict and save to files
if (normalize==TRUE){
preds_matrix <-  paste(resultfolder,'preds_bayeslinGLM_',feature_type,'norm_seed', random_seed,
'.rds',sep='')
preds_file <-  paste(resultfolder,'preds_bayeslinGLM_',feature_type,'norm_seed', random_seed,
'.csv',sep='')
}else{
preds_matrix <-  paste(resultfolder,'preds_bayeslinGLM_',feature_type,'unnorm_seed', random_seed,
'.rds',sep='')
preds_file <-  paste(resultfolder,'preds_bayeslinGLM_',feature_type,'unnorm_seed', random_seed,
'.csv',sep='')
}
brmsGLM_testpred(blinGLM, testdata, matrixpath=preds_matrix, csvpath=preds_file)
